<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">  
  <select id="lastFivePostToId">
    select p.*,u.id,u.userName,u.profileImg,
				ifnull(l.likeCnt,0) likeCnt,ifnull(c.commentCnt,0) commentCnt
    from post p
    inner join user u on u.id = p.userId
    left join (
      select postId, count(*) likeCnt
      from post_like
      group by postId
    ) l on p.postId = l.postId
    left join (
      select postId, count(*) CommentCnt
      from comment
      group by postId
    ) c on c.postId = p.postId
    <where>
      <if test="lastId != null">
        and p.postId &lt; #{lastId}
      </if>
    </where>
    order by postId desc
    limit 5
  </select>
  <select id="postImgToList">
    select postId,imageName
    from post_img
    where postId in
    <foreach item="id" collection="idList" open="(" separator="," close=")">
        #{id}
    </foreach>
    order by postId desc,imageId asc
  </select>
  <insert id="insertPost">
    insert
    into post(userId,content)
    values (#{userId},#{content})
  </insert>
  <insert id="imgUpload">
    insert
    into post_img(postId,imageName)
    values (#{postId},#{imageName})
  </insert>
  <select id="getPosts">
    SELECT p.postId, COALESCE(i.imageName, 'projectPostDefaultImage.jpg') AS imageName
    FROM post p
    LEFT JOIN post_img i ON p.postId = i.postId
    WHERE p.userId = #{userId}
    AND (i.imageId = (
      SELECT MIN(imageId)
      FROM post_img
      WHERE postId = p.postId
    ) OR i.imageId IS NULL);
  </select>
  <select id="likeCnt">
    select count(*) as likeCnt
    from post_like
    where postId = #{postId}
  </select>
  <select id="commentCnt">
    select count(*) as commentCnt
    from comment
    where postId = #{postId}
  </select>
  <select id="getFirstPost">
  select postId
  from post
  order by postId
  limit 1
  </select>
  <select id="getPostLike">
  select count(*) cnt
  from post_like
  where postId = #{postId} and userId = #{userId}
  </select>
  <insert id="insertLike">
  insert
  into post_like(postId,userId)
  values (#{postId},#{userId})
  </insert>
  <delete id="deleteLike">
  delete
  from post_like
  where userId = #{userId} and postId = #{postId}
  </delete>
  <select id="getComment">
  select userId,content
  from comment
  where postId = #{postId}
  order by commentId
  </select>
  <insert id="insertComment">
  insert
  into comment(postId,userId,content)
  values (#{postId},#{userId},#{content})
  </insert>
  
</mapper>